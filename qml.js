// this code was auto-generated by qml2js
function initQml() {
    var applicationelements = {};
    var imports = [ basicelements, applicationelements ];
    // SimpleModel.qml
    addElement(applicationelements,
    {
        parent: lookupElement(imports, "ListModel"),
        name: "SimpleModel",
        properties: {

        },
        constructor: function() {
            var _qml_id_ListModel = this;
            var _qml_id_1_ListElement = createInstance(imports, "ListElement", _qml_id_ListModel);
            addProperty(_qml_id_1_ListElement, "name");
            var _qml_id_2_ListElement = createInstance(imports, "ListElement", _qml_id_ListModel);
            addProperty(_qml_id_2_ListElement, "name");
            var _qml_id_3_ListElement = createInstance(imports, "ListElement", _qml_id_ListModel);
            addProperty(_qml_id_3_ListElement, "name");
            var _qml_id_1_ListElement_scope = {};
            addPropertyProxy(_qml_id_1_ListElement_scope, _qml_id_1_ListElement, "name");
            with (_qml_id_1_ListElement_scope) {
                with (_qml_id_1_ListElement) applyBindings(_qml_id_1_ListElement, {
                    name: function() { return "Element A" }
                });
            }
            var _qml_id_2_ListElement_scope = {};
            addPropertyProxy(_qml_id_2_ListElement_scope, _qml_id_2_ListElement, "name");
            with (_qml_id_2_ListElement_scope) {
                with (_qml_id_2_ListElement) applyBindings(_qml_id_2_ListElement, {
                    name: function() { return "Element B" }
                });
            }
            var _qml_id_3_ListElement_scope = {};
            addPropertyProxy(_qml_id_3_ListElement_scope, _qml_id_3_ListElement, "name");
            with (_qml_id_3_ListElement_scope) {
                with (_qml_id_3_ListElement) applyBindings(_qml_id_3_ListElement, {
                    name: function() { return "Element C" }
                });
            }
        }
    });
    // Label.qml
    addElement(applicationelements,
    {
        parent: lookupElement(imports, "Rectangle"),
        name: "Label",
        properties: {
            buttonColor: {},
            labelText: {}
        },
        constructor: function() {
            var _qml_id_Rectangle = this;
            var _qml_id_1_Text = createInstance(imports, "Text", _qml_id_Rectangle);
            var _qml_id_Rectangle_scope = {};
            addPropertyProxy(_qml_id_Rectangle_scope, _qml_id_Rectangle, "buttonColor");
            addPropertyProxy(_qml_id_Rectangle_scope, _qml_id_Rectangle, "labelText");
            with (_qml_id_Rectangle_scope) {
                with (_qml_id_Rectangle) applyBindings(_qml_id_Rectangle, {
                    buttonColor: function() { return "#37f" },
                    labelText: function() { return "" },
                    width: function() { return 80 },
                    height: function() { return 24 },
                    color: function() { return buttonColor },
                    radius: function() { return 8 }
                });
                with (_qml_id_1_Text) applyBindings(_qml_id_1_Text, {
                    width: function() { return 200 },
                    height: function() { return 24 },
                    x: function() { return 4 },
                    y: function() { return 4 },
                    text: function() { return labelText }
                });
            }
        }
    });
    // example.qml
    var root = createInstance(imports, "Rectangle");
    addProperty(root, "foo");
    addProperty(root, "buttonColor");
    addProperty(root, "t");
    addProperty(root, "frameCounter");
    addProperty(root, "fps");
    var _qml_id_1_MouseArea = createInstance(imports, "MouseArea", root);
    var image = createInstance(imports, "Image", root);
    addProperty(image, "enabled");
    var _qml_id_2_1_MouseArea = createInstance(imports, "MouseArea", image);
    var rect = createInstance(imports, "Rectangle", root);
    var _qml_id_3_1_NumberAnimation = createInstance(imports, "NumberAnimation", rect);
    var inner = createInstance(imports, "Rectangle", rect);
    var _qml_id_4_Label = createInstance(imports, "Label", root);
    addProperty(_qml_id_4_Label, "enabled");
    var hoverArea = createInstance(imports, "MouseArea", _qml_id_4_Label);
    var fade = createInstance(imports, "NumberAnimation", root);
    var component = createInstance(imports, "Component", root);
    var listModel = createInstance(imports, "SimpleModel", root);
    var _qml_id_8_Item = createInstance(imports, "Item", root);
    var _qml_id_8_1_Text = createInstance(imports, "Text", _qml_id_8_Item);
    var _qml_id_8_2_Row = createInstance(imports, "Row", _qml_id_8_Item);
    var _qml_id_8_2_1_Repeater = createInstance(imports, "Repeater", _qml_id_8_2_Row);
    var _qml_id_9_Item = createInstance(imports, "Item", root);
    var _qml_id_9_1_Text = createInstance(imports, "Text", _qml_id_9_Item);
    var _qml_id_9_2_Row = createInstance(imports, "Row", _qml_id_9_Item);
    var _qml_id_9_2_1_Repeater = createInstance(imports, "Repeater", _qml_id_9_2_Row);
    var _qml_id_10_NumberAnimation = createInstance(imports, "NumberAnimation", root);
    var _qml_id_11_Text = createInstance(imports, "Text", root);
    var _qml_id_12_Timer = createInstance(imports, "Timer", root);
    var root_scope = {};
    addPropertyProxy(root_scope, root, "foo");
    addPropertyProxy(root_scope, root, "buttonColor");
    addPropertyProxy(root_scope, root, "t");
    addPropertyProxy(root_scope, root, "frameCounter");
    addPropertyProxy(root_scope, root, "fps");
    with (root_scope) {
        with (root) applyBindings(root, {
            color: function() { return "olive" },
            width: function() { return 800 },
            height: function() { return 800 },
            foo: function() { return 20 },
            buttonColor: function() { return "#37f" },
            t: function() { return 0 },
            frameCounter: function() { return 0 },
            fps: function() { return 0 },
            onTChanged: function() { return ++frameCounter }
        });
        with (_qml_id_1_MouseArea) applyBindings(_qml_id_1_MouseArea, {
            width: function() { return 800 },
            height: function() { return 800 },
            onClicked: function() {
            if (fade.running)
                return;
            if (fade.to === 0) {
                fade.to = 1;
                fade.from = 0;
            } else {
                fade.to = 0;
                fade.from = 1;
            }
            fade.running = true;
        }
        });
        var image_scope = {};
        addPropertyProxy(image_scope, image, "enabled");
        with (image_scope) {
            with (image) applyBindings(image, {
                x: function() { return 10 },
                y: function() { return 200 },
                enabled: function() { return true },
                source: function() { return enabled ? "tick.png" : "cross.png" }
            });
            with (_qml_id_2_1_MouseArea) applyBindings(_qml_id_2_1_MouseArea, {
                width: function() { return image.width },
                height: function() { return image.height },
                onClicked: function() { return enabled = !enabled }
            });
        }
        with (rect) applyBindings(rect, {
            color: function() { return "green" },
            width: function() { return 40 },
            height: function() { return 40 }
        });
        with (_qml_id_3_1_NumberAnimation) applyBindings(_qml_id_3_1_NumberAnimation, {
            target: function() { return rect },
            property: function() { return "x" },
            from: function() { return 0 },
            to: function() { return root.width - rect.width },
            duration: function() { return 4000 },
            running: function() { return true },
            loops: function() { return -1 }
        });
        with (inner) applyBindings(inner, {
            color: function() { return "red" },
            width: function() { return foo },
            height: function() { return 20 }
        });
        var _qml_id_4_Label_scope = {};
        addPropertyProxy(_qml_id_4_Label_scope, _qml_id_4_Label, "enabled");
        with (_qml_id_4_Label_scope) {
            with (_qml_id_4_Label) applyBindings(_qml_id_4_Label, {
                x: function() { return 20 },
                y: function() { return 100 },
                width: function() { return 140 },
                height: function() { return 24 },
                color: function() { return buttonColor },
                radius: function() { return 8 },
                enabled: function() { return false },
                labelText: function() { return hoverArea.hovered ? "QML Rocks!" : "Hello QML2JS" }
            });
            with (hoverArea) applyBindings(hoverArea, {
                width: function() { return parent.width },
                height: function() { return parent.height },
                hoverEnabled: function() { return true }
            });
        }
        with (fade) applyBindings(fade, {
            target: function() { return root },
            property: function() { return "opacity" },
            from: function() { return 0 },
            to: function() { return 1 },
            running: function() { return false }
        });
        component._instantiateQml = function(parent, scope) {
            var _qml_id_6_1_Rectangle = createInstance(imports, "Rectangle", parent);
            addProperty(_qml_id_6_1_Rectangle, "unused");
            var _qml_id_6_1_1_Text = createInstance(imports, "Text", _qml_id_6_1_Rectangle);
            with (scope) {
                var _qml_id_6_1_Rectangle_scope = {};
                addPropertyProxy(_qml_id_6_1_Rectangle_scope, _qml_id_6_1_Rectangle, "unused");
                with (_qml_id_6_1_Rectangle_scope) {
                    with (_qml_id_6_1_Rectangle) applyBindings(_qml_id_6_1_Rectangle, {
                        width: function() { return 80 / 2 },
                        height: function() { return 24 },
                        color: function() { return buttonColor },
                        radius: function() { return 8 }
                    });
                    with (_qml_id_6_1_1_Text) applyBindings(_qml_id_6_1_1_Text, {
                        x: function() { return 4 },
                        y: function() { return 4 },
                        text: function() { return index }
                    });
                }
            }
            return _qml_id_6_1_Rectangle;
        }
        with (_qml_id_8_Item) applyBindings(_qml_id_8_Item, {
            x: function() { return 220 },
            y: function() { return 100 }
        });
        with (_qml_id_8_1_Text) applyBindings(_qml_id_8_1_Text, {
            width: function() { return 400 },
            text: function() { return "Row with ListModel Repeater" }
        });
        with (_qml_id_8_2_Row) applyBindings(_qml_id_8_2_Row, {
            y: function() { return 28 }
        });
        _qml_id_8_2_1_Repeater._instantiateQml = function(parent, scope) {
            var _qml_id_8_2_1_1_Text = createInstance(imports, "Text", parent);
            with (scope) {
                with (_qml_id_8_2_1_1_Text) applyBindings(_qml_id_8_2_1_1_Text, {
                    width: function() { return 80 },
                    height: function() { return 28 },
                    text: function() { return name }
                });
            }
            return _qml_id_8_2_1_1_Text;
        }
        with (_qml_id_8_2_1_Repeater) applyBindings(_qml_id_8_2_1_Repeater, {
            model: function() { return listModel }
        });
        with (_qml_id_9_Item) applyBindings(_qml_id_9_Item, {
            x: function() { return 520 },
            y: function() { return 100 }
        });
        with (_qml_id_9_1_Text) applyBindings(_qml_id_9_1_Text, {
            width: function() { return 200 },
            text: function() { return "Nested Row / Column with number Repeaters" }
        });
        with (_qml_id_9_2_Row) applyBindings(_qml_id_9_2_Row, {
            y: function() { return 20 }
        });
        _qml_id_9_2_1_Repeater._instantiateQml = function(parent, scope) {
            var _qml_id_9_2_1_1_Column = createInstance(imports, "Column", parent);
            var _qml_id_9_2_1_1_1_Repeater = createInstance(imports, "Repeater", _qml_id_9_2_1_1_Column);
            with (scope) {
                with (_qml_id_9_2_1_1_Column) applyBindings(_qml_id_9_2_1_1_Column, {
                    y: function() { return 28 },
                    spacing: function() { return 2 }
                });
                with (_qml_id_9_2_1_1_1_Repeater) applyBindings(_qml_id_9_2_1_1_1_Repeater, {
                    model: function() { return 8 },
                    delegate: function() { return component }
                });
            }
            return _qml_id_9_2_1_1_Column;
        }
        with (_qml_id_9_2_1_Repeater) applyBindings(_qml_id_9_2_1_Repeater, {
            model: function() { return 2 }
        });
        with (_qml_id_10_NumberAnimation) applyBindings(_qml_id_10_NumberAnimation, {
            target: function() { return root },
            property: function() { return "t" },
            loops: function() { return -1 },
            running: function() { return true }
        });
        with (_qml_id_11_Text) applyBindings(_qml_id_11_Text, {
            x: function() { return 4 },
            y: function() { return 400 },
            text: function() { return root.fps + " fps" }
        });
        with (_qml_id_12_Timer) applyBindings(_qml_id_12_Timer, {
            onTriggered: function() {
            fps = frameCounter * 0.5
            frameCounter = 0;
        },
            interval: function() { return 2000 },
            repeat: function() { return true },
            running: function() { return true }
        });
    }
}
